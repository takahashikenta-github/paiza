package paiza;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class B091 {

	public static void main(String[] args) {
		
		Scanner in = new Scanner(System.in);

		int size = in.nextInt();// 地図の大きさ
		int[][] map = new int[size + 2][size + 2];// 地図の大きさより縦・横1大きいサイズ

		// 地図の標高を0で初期化
		for (int row = 0; row < size + 2; row++) {
			for (int i = 0; i < size + 2; i++) {
				map[row][i] = 0;
			}
		}

		// 各地点の標高を入力
		for (int row = 1; row < size + 1; row++) {
			for (int i = 1; i < size + 1; i++) {
				map[row][i] = in.nextInt();
			}
		}

		boolean flg = true;// 標高判定用
		List<Integer> elevationList = new ArrayList<>();// 標高を格納するリスト

		for (int row = 1; row < size + 1; row++) {
			for (int i = 1; i < size + 1; i++) {
				if (map[row][i] <= map[row - 1][i]) {// 地点の上のマスの標高の方が大きい場合
					flg = false;
				}
				if (map[row][i] <= map[row + 1][i]) {// 地点の下のマスの標高の方が大きい場合
					flg = false;
				}
				if (map[row][i] <= map[row][i - 1]) {// 地点の左のマスの標高の方が大きい場合
					flg = false;
				}
				if (map[row][i] <= map[row][i + 1]) {// 地点の右のマスの標高の方が大きい場合
					flg = false;
				}
				if (flg) {// 標高の条件を満たす
					elevationList.add(map[row][i]);// リストに標高格納
				}
				flg = true;// 初期化
			}
		}

		while (elevationList.size() > 0) {//
			System.out.println(Collections.max(elevationList));
			elevationList.remove(Collections.max(elevationList));
		}


	}

}
